/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Metodos.Borrar;
import Metodos.Conectar;
import Metodos.Consultas;
import Metodos.CreacionTablas;
import Metodos.Insertar;
import Metodos.Modificar;
import Metodos.Return;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author juan
 */
public class GUI_SQLITE extends javax.swing.JPanel {

    /**
     * Creates new form GUI_SQLITE
     */
    ArrayList<Integer> ids = new ArrayList<>();
    
    /**
     * El constructor se conecta con la base de datos, crea las tablas
     * carne y tipo de carne. Este añade las filas a la tabla tipo de carne
     * y muestra ambas filas
    */
    
    public GUI_SQLITE() {
        initComponents();
        Conectar.conectar();
        CreacionTablas.crearTablaAnimal();
        CreacionTablas.crearTablaCarnes();
        Insertar.insertarCarne(1, "Filete de pollo", "Carniceria", 1);
        Insertar.insertarCarne(2, "Chorizo de pamplona", "Charcuteria", 2);
        Insertar.insertarCarne(1, "Costilla de cerdo", "Carniceria", 2);
        Insertar.insertarCarne(1, "Cocretas de pollo", "Carniceria", 1);
        Insertar.insertarTipoCarne();
        
    }
    
    /**
     * Metodo para vaciar el contenido de las filas
     * @param tabla
     * @return Vaciar tablas
     */
    public boolean borrarTabla(JTable tabla) {
        boolean brTab = false;
        try {
            DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
            int filas = tabla.getRowCount();
            for (int i = 0; filas > i; i++) {
                modelo.removeRow(0);
                brTab = true;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR TABLE NOT CLEAN.");
            brTab = false;
        }
        return brTab;
    }
    
     /**
     * Método para insertar filas a la tabla carnes
     * 
     * @param codigobarras
     * @param nombreproducto
     * @param seccion
     * @param tipocarne
     * @return Inserción filas iniciales
     */
    public final boolean insertarCompetidores(int codigobarras, String nombreproducto, String seccion, int tipocarne) {
        Insertar.insertarCarne(codigobarras, nombreproducto, seccion, tipocarne);
        String[] carne = Return.devolverCarne(codigobarras).split(",");
        DefaultTableModel model = (DefaultTableModel) tablaCarnes.getModel();
        model.addRow(new Object[]{carne[0], carne[1], carne[2], Consultas.obtenerAnimal(Integer.parseInt(carne[3]))});
        ids.add(codigobarras);
        return true;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCarnes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lCodigoBarras = new javax.swing.JLabel();
        lNombreProducto = new javax.swing.JLabel();
        lSeccion = new javax.swing.JLabel();
        tfCodigoBarras = new javax.swing.JTextField();
        tfNombreProducto = new javax.swing.JTextField();
        tfSeccion = new javax.swing.JTextField();
        bAñadir = new javax.swing.JButton();
        tCarnesAnimal = new javax.swing.JScrollPane();
        tablaAnimal = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        bModificar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cbConsulta = new javax.swing.JComboBox<>();
        tConsulta = new javax.swing.JTextField();
        bConsultar = new javax.swing.JButton();
        bMostrar = new javax.swing.JButton();
        bBorrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        tablaCarnes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CODIGO BARRAS", "NOMBRE PRODUCTO", "SECCION", "TIPO CARNE"
            }
        ));
        jScrollPane1.setViewportView(tablaCarnes);

        jLabel1.setText("¿Desea insertar un producto cárnico nuevo?");

        lCodigoBarras.setText("CODIGO BARRAS");

        lNombreProducto.setText("NOMBRE PRODUCTO");

        lSeccion.setText("SECCION");

        tfCodigoBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCodigoBarrasActionPerformed(evt);
            }
        });

        tfNombreProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNombreProductoActionPerformed(evt);
            }
        });

        bAñadir.setText("AÑADIR");
        bAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAñadirActionPerformed(evt);
            }
        });

        tablaAnimal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "COD", "ANIMAL"
            }
        ));
        tCarnesAnimal.setViewportView(tablaAnimal);

        jLabel5.setText("¿Desea modificar un producto?");

        jLabel6.setText("Nombre producto");

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        bModificar.setText("MODIFICAR");
        bModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarActionPerformed(evt);
            }
        });

        jLabel7.setText("Consulta filas");

        cbConsulta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CODIGO BARRAS", "NOMBRE PRODUCTO", "SECCION", "TIPO CARNE" }));

        bConsultar.setText("CONSULTAR");
        bConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConsultarActionPerformed(evt);
            }
        });

        bMostrar.setText("MOSTRAR");
        bMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMostrarActionPerformed(evt);
            }
        });

        bBorrar.setText("BORRAR");
        bBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBorrarActionPerformed(evt);
            }
        });

        jLabel2.setText("Seccion");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lCodigoBarras)
                                        .addGap(50, 50, 50)
                                        .addComponent(tfCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel1)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lSeccion)
                                            .addGap(94, 94, 94)
                                            .addComponent(tfSeccion))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lNombreProducto)
                                            .addGap(27, 27, 27)
                                            .addComponent(tfNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                                        .addComponent(tCarnesAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(bMostrar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(bBorrar)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField5)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                                .addGap(86, 86, 86)
                                .addComponent(cbConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(bConsultar)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(tConsulta)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bAñadir)
                                    .addComponent(bModificar))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(96, 96, 96))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bMostrar)
                            .addComponent(bBorrar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lCodigoBarras)
                            .addComponent(tfCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lNombreProducto)
                            .addComponent(tfNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lSeccion)
                            .addComponent(tfSeccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(tCarnesAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bAñadir)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(bModificar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bConsultar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tfCodigoBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCodigoBarrasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCodigoBarrasActionPerformed

    private void tfNombreProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNombreProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNombreProductoActionPerformed

    private void bAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAñadirActionPerformed
        //Evento del boton añadir, en este selecciona las filas donde desee 
        //Insertar el codigo
        int fila = tablaCarnes.getSelectedRow();
        int codigobarras, Categoria;
        String nombreproducto, seccion;
        codigobarras = Integer.parseInt(tfCodigoBarras.getText());
        nombreproducto = tfNombreProducto.getText();
        seccion = tfSeccion.getText();
        for (Integer i : ids) {
            if (codigobarras == i) {
                JOptionPane.showMessageDialog(null, "El codigo de barras ya existe");
                return;
            }
        }
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado una Categoria");
        } else {
            Categoria = Integer.parseInt(tablaCarnes.getValueAt(fila, 0).toString());
            Insertar.insertarCarne(codigobarras, nombreproducto, seccion, fila);
            String[] producto = Return.devolverCarne(codigobarras).split(",");
            DefaultTableModel model = (DefaultTableModel) tablaCarnes.getModel();
            model.addRow(new Object[]{producto[0], producto[1], producto[2], Consultas.obtenerAnimal(Integer.parseInt(producto[3]))});
            ids.add(codigobarras);
        }

    }//GEN-LAST:event_bAñadirActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void bBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBorrarActionPerformed
        // TODO add your handling code here:
        int fila = tablaCarnes.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No hay ninguna fila seleccionada");
        } else {
            int codigobarras = Integer.parseInt(tablaCarnes.getValueAt(fila, 0).toString());
            for (int i = 0; i < ids.size(); i++) {
                if (ids.get(i) == codigobarras) {
                    ids.remove(i);
                }
            }
            Borrar.borrarCodigoBarras(codigobarras);
            bMostrarActionPerformed(evt);
            JOptionPane.showMessageDialog(null, "Codigo de barras eliminado");
        }
    }//GEN-LAST:event_bBorrarActionPerformed

    private void bMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMostrarActionPerformed
        borrarTabla(tablaCarnes);
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            ResultSet rs = Conectar.getTabla("select * from carnes");
            modelo.setColumnIdentifiers(new Object[]{"codigobarras", "nombreproducto", "seccion", "tipocarne"});
            try {
                while (rs.next()) {
                    modelo.addRow(new Object[]{rs.getInt("codigobarras"), rs.getString("nombreproducto"), rs.getString("seccion"), rs.getString("tipocarne")});
                }
                tablaCarnes.setModel(modelo);
            } catch (SQLException e) {
                System.out.println(e);
            }
        } catch (SQLException e) {
            System.out.println(e);
        }

        borrarTabla(tablaAnimal);
        for (int i = 1; i < 5; i++) {
            String[] categoria = Return.devolverCategoria(i).split(",");
            DefaultTableModel model = (DefaultTableModel) tablaAnimal.getModel();
            model.addRow(new Object[]{categoria[0], categoria[1]});
        }        // TODO add your handling code here:
    }//GEN-LAST:event_bMostrarActionPerformed

    private void bModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarActionPerformed
        int filaA = tablaCarnes.getSelectedRow();
        int filaC = tablaAnimal.getSelectedRow();
        if (filaA == -1) {
            JOptionPane.showMessageDialog(null, "No hay ninguna fila seleccionada");
        } else if (filaC == -1) {
            String nombreproducto = tfNombreProducto.getText();
            String seccion = tfSeccion.getText();
            int Dorsal = Integer.parseInt(tablaCarnes.getValueAt(filaA, 0).toString());
            Modificar.modificarSeccionProducto(nombreproducto, seccion, filaC, Dorsal);
            bMostrarActionPerformed(evt);
        } else {
            String Piloto = tfNombreProducto.getText();
            String Vehiculo = tfSeccion.getText();
            int Dorsal = Integer.parseInt(tablaCarnes.getValueAt(filaA, 0).toString());
            int Categoria = Integer.parseInt(tablaAnimal.getValueAt(filaC, 0).toString());
            Modificar.modificarProducto(Vehiculo, Vehiculo, Categoria);
            bMostrarActionPerformed(evt);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_bModificarActionPerformed

    private void bConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarActionPerformed
    borrarTabla(tablaCarnes);
        String opcion = cbConsulta.getSelectedItem().toString();
        Object buscar = tConsulta.getText();
        switch (opcion) {
            case "codigobarras":
                opcion = "";
                break;
            case "nombreproducto":
                opcion = "nombreproducto";
                break;
            case "seccion":
                opcion = "seccion";
                break;
            case "tipocarne":
                opcion = "tipocarne";
                buscar = Consultas.obtenerCODAnimal((String) buscar);
                break;
            default:
                opcion = "nombreproducto";
                break;
        }
        ArrayList<String> animales = Consultas.consultaCarnes(opcion, buscar);
        for (int i = 0; i < animales.size(); i++) {
            int cod = Integer.parseInt(animales.get(i).split(",")[0]);
            String[] categoria = Return.devolverCategoria(cod).split(",");
            DefaultTableModel model = (DefaultTableModel) tablaCarnes.getModel();
            model.addRow(new Object[]{categoria[0], categoria[1], categoria[2], Consultas.obtenerAnimal(Integer.parseInt(categoria[3]))});
        }        // TODO add your handling code here:
    }//GEN-LAST:event_bConsultarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAñadir;
    private javax.swing.JButton bBorrar;
    private javax.swing.JButton bConsultar;
    private javax.swing.JButton bModificar;
    private javax.swing.JButton bMostrar;
    private javax.swing.JComboBox<String> cbConsulta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JLabel lCodigoBarras;
    private javax.swing.JLabel lNombreProducto;
    private javax.swing.JLabel lSeccion;
    private javax.swing.JScrollPane tCarnesAnimal;
    private javax.swing.JTextField tConsulta;
    private javax.swing.JTable tablaAnimal;
    private javax.swing.JTable tablaCarnes;
    private javax.swing.JTextField tfCodigoBarras;
    private javax.swing.JTextField tfNombreProducto;
    private javax.swing.JTextField tfSeccion;
    // End of variables declaration//GEN-END:variables
}
